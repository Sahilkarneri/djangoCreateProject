django_project urls.py contains the routes for whole project

For adding base html in html files use {% extends 'blog/base.html' %} where  {% extends 'appname_folder/htmlpage.html' %}

For loading static files use ->
{% load static %}
<link rel="stylesheet" href="{% static 'blog/main.css' %}">


For implementing routes in navigation links use ->
<a href="{% url 'blog-home' %}">Home</a>
where 'blog-home' is name given as parameter in urls.py 
from django.urls import path
from . import views
urlpatterns = [
    path('', views.home, name='blog-home'),
    path('about/', views.about, name="blog-about"),
]

create superuser to login in admin dashbord
first create db tables if not migrated
> python manage.py makemigrations
> python manage.py migrate
> python manage.py createsuperuser
> enter username
> enter email
> enter password


create models / table using django ORM
from django.db import models
from django.utils import timezone
from django.contrib.auth.models import User

# Create your models here.
class Post(models.Model):
    title = models.CharField(max_length=100)
    content = models.TextField()
    date_posted = models.DateTimeField(default=timezone.now)
    author = models.ForeignKey(User, on_delete=models.CASCADE)

> python manage.py makemigrations
> Migrations for 'blog':
  blog\migrations\0001_initial.py
    - Create model Post
To look at the query
> python manage.py sqlmigrate blog 0001
BEGIN;
--
-- Create model Post
--
CREATE TABLE "blog_post" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(100) NOT NULL, "content" text NOT NULL, "date_posted" datetime NOT NULL, "author_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE INDEX "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
COMMIT;
> python manage.py migrate
> Operations to perform:
  Apply all migrations: admin, auth, blog, contenttypes, sessions
Running migrations:
  Applying blog.0001_initial... OK



database shell for importing all db objects
> python manage.py shell
python interactive shell >
>from blog.models import Post
>from django.contrib.auth.models import User
> User.objects.all()
<QuerySet [<User: admin>]>
> user = User.objects.filter(username="Eva").first()
> user
> <User:Eva>
> user.id
> 2
> user.pk
> 2
> user.username
> 'Eva'
get user by id
> user = User.objects.get(id=2)
> user
> <User:Eva>
create post using python manage.py shell
> post1 = Post(title="post title one", content="Content of post one", author=user)
> to save the data to database user save() function
> post1.save()
> >>> Post.objects.all()
<QuerySet [<Post: Post object (1)>]>
>>> Post.objects.all().first()
<Post: Post object (1)>
> 
